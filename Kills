--// Whitelist Setup
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local WhitelistedUsers = {
    ["alleah182010"] = true,
    ["gorgeportabes"] = true,
}

if not WhitelistedUsers[LocalPlayer.Name] then
    LocalPlayer:Kick("You are not whitelisted to use this script.")
    return
end

-- Services
local TeleportService = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Rayfield GUI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "Killing only‚ò†Ô∏è",
    LoadingTitle = "By khem",
    LoadingSubtitle = "MUSCLE LEGENDS üí™",
})

local Tab = Window:CreateTab("Main", 4483362458)

-- Vars
local AutoKillEnabled = false
local autoSizeLoop
local RejoinEnabled = false
local LockPosition = CFrame.new(-31.8626, 6.0588, 2087.8867)

-- File memory setup (Mode 1)
local fileName = "AutoKillMode1.json"

local function SaveMemory(state)
    if writefile then
        writefile(fileName, tostring(state))
    end
end

local function LoadMemory()
    if isfile and isfile(fileName) then
        local content = readfile(fileName)
        return content == "true"
    end
    return false
end

local MemoryState = LoadMemory()

-- Functions
local function EquipPunch()
    local tool = LocalPlayer.Backpack:FindFirstChild("Punch")
    if tool then
        LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):EquipTool(tool)
    end
end

local function DoPunch()
    local char = LocalPlayer.Character
    if not char then return end
    local punch = LocalPlayer.Backpack:FindFirstChild("Punch") or char:FindFirstChild("Punch")
    if punch then
        if punch:FindFirstChild("attackTime") then
            punch.attackTime.Value = 0.001
        end
        for i = 1, 5 do pcall(function() punch:Activate() end) end
    end
end

local function AutoKillLoop(lockPosition)
    task.spawn(function()
        while AutoKillEnabled do
            local char = LocalPlayer.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                if lockPosition then
                    char.HumanoidRootPart.CFrame = lockPosition
                end
                EquipPunch()
                DoPunch()
                local rHand = char:FindFirstChild("RightHand")
                local lHand = char:FindFirstChild("LeftHand")
                if rHand and lHand then
                    for _, target in ipairs(Players:GetPlayers()) do
                        if target ~= LocalPlayer and target.Character then
                            local root = target.Character:FindFirstChild("HumanoidRootPart")
                            if root then
                                firetouchinterest(rHand, root, 1)
                                firetouchinterest(lHand, root, 1)
                                firetouchinterest(rHand, root, 0)
                                firetouchinterest(lHand, root, 0)
                            end
                        end
                    end
                end
            end
            task.wait(0.01)
        end
    end)
end

local function StartAutoSizeNaN()
    if autoSizeLoop then return end
    autoSizeLoop = task.spawn(function()
        while AutoKillEnabled do
            pcall(function()
                ReplicatedStorage.rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", 0/0)
            end)
            task.wait()
        end
    end)
end

local function StopAutoSizeNaN()
    if autoSizeLoop then task.cancel(autoSizeLoop) autoSizeLoop = nil end
end

-- GUI Toggles
Tab:CreateToggle({
    Name = "Mode 1: Auto Kill + NaN + Lock + Auto Rejoin",
    CurrentValue = MemoryState,
    Callback = function(Value)
        SaveMemory(Value)
        if Value then
            RejoinEnabled = true
            AutoKillEnabled = true
            AutoKillLoop(LockPosition)
            StartAutoSizeNaN()
        else
            RejoinEnabled = false
            AutoKillEnabled = false
            StopAutoSizeNaN()
        end
    end,
})

Tab:CreateToggle({
    Name = "Mode 2: Auto Kill + NaN + Lock (No Rejoin)",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            RejoinEnabled = false
            AutoKillEnabled = true
            AutoKillLoop(LockPosition)
            StartAutoSizeNaN()
        else
            AutoKillEnabled = false
            StopAutoSizeNaN()
        end
    end,
})

Tab:CreateToggle({
    Name = "Mode 3: Auto Kill Only",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            AutoKillEnabled = true
            AutoKillLoop(nil)
        else
            AutoKillEnabled = false
        end
    end,
})

-- Auto Rejoin loop
task.spawn(function()
    while true do
        task.wait(30)
        if RejoinEnabled then
            TeleportService:Teleport(game.PlaceId, LocalPlayer)
        end
    end
end)

-- Auto-enable Mode 1 if memory says ON
if MemoryState then
    RejoinEnabled = true
    AutoKillEnabled = true
    AutoKillLoop(LockPosition)
    StartAutoSizeNaN()
end
